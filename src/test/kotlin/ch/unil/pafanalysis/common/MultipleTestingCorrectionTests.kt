package ch.unil.pafanalysis.common

import org.junit.jupiter.api.Test
import org.springframework.boot.test.context.SpringBootTest
import java.math.BigDecimal
import java.math.RoundingMode


@SpringBootTest
class MultipleTestingCorrectionTests {
    private val multipleTestingCorrection = MultipleTestingCorrection()

    private val roundingPrecision = 7

    private fun roundNumber(n: Double?, precision: Int = roundingPrecision): BigDecimal {
        return if(n == null) BigDecimal(0)
        else BigDecimal(n).setScale(precision, RoundingMode.HALF_UP)
    }

    val pValues = listOf(9.98346216121655e-90,2.56055964564855e-87,3.87139345933136e-87,2.89519216175499e-58,4.07359747365679e-49,2.12805273453551e-40,9.33310354447396e-40,1.92854021525679e-38,1.3168467328489e-37,1.73029225031292e-36,3.23425076630769e-35,8.94458796075424e-33,9.71233443116464e-33,3.46546289637168e-32,1.09260024635147e-31,7.19484677764398e-31,1.45519043858218e-30,1.78514768232716e-30,2.19334521867749e-30,2.19334521867749e-30,1.53626419243511e-29,1.82167604580992e-29,2.53037058143668e-29,1.69783643535254e-28,3.17658172739397e-28,5.27630871679832e-28,1.10868312983642e-26,3.06335803374262e-26,5.88994710472666e-26,6.29463414443261e-26,1.88255401843971e-25,8.16850939237024e-25,1.85964641257032e-22,1.01226855871922e-21,1.97583995887616e-21,4.57471931778609e-21,7.40265643273443e-21,1.21112056325567e-19,2.46320189734905e-19,2.79060815943296e-19,6.42880331830825e-19,1.0669744229406e-18,6.01981727311636e-18,6.81398392199852e-18,8.29335306573142e-18,2.65005085238157e-17,4.77068919722711e-17,1.37534441779784e-16,5.25445681120418e-16,7.53473664588297e-16,1.33674939319021e-15,1.33674939319021e-15,6.98241947410343e-15,9.7024209053735e-15,1.08983802685778e-14,2.27478409368173e-14,6.44656009313225e-14,7.10452847681974e-14,1.19422086835611e-13,1.62613163490703e-13,1.88944342142923e-13,2.55780626868445e-13,5.21978883412609e-13,5.67731726584467e-13,8.0305602861858e-13,8.0305602861858e-13,9.59440006140292e-13,1.0421212596504e-12,1.12426268447514e-12,1.24835333330715e-12,1.26264760402982e-12,1.72814341865434e-12,1.72814341865434e-12,1.93901919481921e-12,2.1268166091682e-12,2.87114027325843e-12,3.53628113988017e-12,5.38555029742223e-12,5.89436784689821e-12,7.58737269630179e-12,7.72223417062195e-12,8.43186783415005e-12,1.09165703667471e-11,1.09165703667471e-11,1.24256318792672e-11,1.24256318792672e-11,1.59045998343806e-11,1.68252158614862e-11,1.69164812835068e-11,1.70096762307632e-11,1.84058082961302e-11,2.09193821378606e-11,2.4635705409811e-11,2.59613755189996e-11,2.66570383206575e-11,2.74468787472684e-11,3.36777597232076e-11,4.67261775975165e-11,4.7177748965407e-11,5.51706639150507e-11,5.62040658528061e-11,7.24300107456999e-11,7.66416862946138e-11,8.81413091085429e-11,9.71696544648715e-11,1.16843792079027e-10,1.2378186660039e-10,1.34505012726344e-10,1.5856084548488e-10,1.87215661394304e-10,1.95010519018171e-10,1.95010519018171e-10,2.15661908948521e-10,2.46759598478183e-10,2.91437141141392e-10,2.9977469023988e-10,3.10057637060078e-10,4.39378498811012e-10,5.70378712610702e-10,6.70284971133867e-10,8.42192065577721e-10,9.58874433889677e-10,9.58874433889677e-10,1.02700540121233e-09,1.02700540121233e-09,3.56676405371637e-09,4.56280539982964e-09,4.78029295911341e-09,5.1466370751491e-09,1.2760780311298e-08,1.38969323951069e-08,1.81411532014933e-08,1.81491408071204e-08,2.01617810100527e-08,2.0753549989922e-08,2.0753549989922e-08,2.10463845392337e-08,2.59392115643334e-08,3.26221107691112e-08,3.31636664028992e-08,3.73031892121494e-08,7.42812858107412e-08,8.86887767109999e-08,9.48772338653976e-08,1.12140979863751e-07,1.50814615675497e-07,1.51459958303871e-07,1.57571563849857e-07,1.74304606111367e-07,1.77106132409265e-07,2.08226688845309e-07,2.5084216806453e-07,3.53978162774656e-07,3.81393524190686e-07,4.322629934028e-07,5.5423369392162e-07,5.61230009365279e-07,5.97621307587518e-07,8.11624821325612e-07,1.06281999255409e-06,1.18473284225402e-06,1.23967649738055e-06,1.28356841043308e-06,1.39964810003039e-06,1.56014014899191e-06,1.60690459572814e-06,1.70125294260668e-06,1.70125294260668e-06,1.70125294260668e-06,1.81348679802828e-06,1.86317320678213e-06,1.865176779168e-06,2.07901189725051e-06,2.60023735954938e-06,2.61742771995954e-06,3.25983817998401e-06,3.25983817998401e-06,3.29612375891163e-06,3.43330719486589e-06,3.49149501157805e-06,3.55995848027545e-06,3.59727363758186e-06,3.83550936454251e-06,4.02079865420404e-06,4.09522848341598e-06,4.13621695049914e-06,4.45727034386304e-06,4.48814369503064e-06,4.84721868828381e-06,5.27777405240353e-06,5.29873625648818e-06,5.32246791867317e-06,5.50720365375528e-06,5.80572527907784e-06,6.11329988036715e-06,6.20515725486863e-06,6.42005442897385e-06,6.61964978233751e-06,6.64108917974106e-06,7.05483129148507e-06,7.05483129148507e-06,7.48735395468014e-06,7.75109616197341e-06,7.90922115502635e-06,8.6008958686127e-06,8.6008958686127e-06,9.98406346813583e-06,1.05127213571129e-05,1.08059994116863e-05,1.09473159053939e-05,1.22810241218756e-05,1.39568929175509e-05,1.62783470769545e-05,1.63417187692897e-05,1.78840137266752e-05,1.79295193045302e-05,1.79741148782626e-05,1.81473965695106e-05,1.86641663704858e-05,1.98047550737374e-05,2.02097572281832e-05,2.12897183612277e-05,2.36506021513881e-05,2.47077341745695e-05,2.47732882358241e-05,2.49544998953063e-05,2.54013124446186e-05,2.69352015483293e-05,2.83717114295513e-05,2.83717114295513e-05,2.85244943032639e-05,2.8558928297384e-05,2.95938498320207e-05,2.95938498320207e-05,3.09872695885277e-05,3.1476655030051e-05,3.88122530725504e-05,4.01793131888558e-05,4.02215272506827e-05,4.1758044015497e-05,4.77078645934169e-05,5.01321100219276e-05,5.19647679733384e-05,5.35554153500107e-05,5.37329668377051e-05,5.42185902081223e-05,5.61071188851757e-05,5.71998928091927e-05,5.76734237245833e-05,5.85049398633474e-05,5.93443755026253e-05,5.97833320488242e-05,6.1488023124736e-05,6.20946358161042e-05,6.33338037520208e-05,6.35219205246249e-05,6.54322258208791e-05,6.59835466755881e-05,6.77182613789509e-05,6.89322143639308e-05,6.92472613890186e-05,7.09787235437779e-05,7.53519418973215e-05,8.28745669871561e-05,8.4223598991482e-05,8.46248401331019e-05,8.64836653021071e-05,9.56958973727934e-05,0.000100522944372061,0.000102696900521578,0.000106537331046532,0.000112048758612488,0.000115226462756725,0.000124697463179557,0.000125668342995966,0.000129491826692591,0.000130146709589786,0.000133037728731931,0.000146289015841061,0.000157956461996696,0.000161677745414462,0.000168248576398532,0.000184956152478533,0.000184956152478533,0.000187754526259762,0.000189727381533565,0.000196578110562107,0.000200988426041279,0.000204204707799841,0.000204239243883381,0.000205224123477071,0.000208678620862815,0.000211430963677552,0.000211430963677552,0.000212197197506861,0.000215384938147941,0.000221493834317587,0.000222793410160101,0.000224473952395383,0.000224473952395383,0.000224473952395383,0.000224473952395383,0.000225621489908086,0.000225804979236467,0.000239636747104229,0.00024316886608699,0.000253412858765876,0.000257807510952727,0.000263100414643938,0.000264419468412272,0.000278392511877552,0.000279000004601367,0.000284283892866635,0.000299012729000482,0.000304328906549272,0.000305838293629274,0.000305838293629274,0.000307624714475416,0.000316845062683424,0.000325089705756471,0.000330512521167574,0.000330512521167574,0.00035449330906985,0.00035449330906985,0.000362452946026824,0.000370613042330202,0.00037257708275521,0.000373404754436708,0.000375408642552775,0.000392811975933333,0.000392811975933333,0.000392811975933333,0.000396380131122693,0.000401305373502457,0.000402232043417024,0.000405173493564834,0.000407820251265202,0.000409349699192506,0.000420300998280726,0.000420300998280726,0.000425172371709198,0.000427450076827329,0.000436772896675313,0.000454718161318442,0.000457226882904344,0.000501275100851464,0.000520317869808058,0.000522607964229174,0.00054453547683476,0.000556498363999811,0.000561459981573866,0.000564185700030975,0.000573210964469135,0.000573210964469135,0.000580461299412022,0.000580461299412022,0.000582212381452652,0.000591185895858725,0.000591185895858725,0.000591185895858725,0.000596759905566487,0.000601211490155939,0.000606633508938312,0.000608561159229921,0.000613351405400263,0.00061845032619624,0.00063094251789708,0.00063094251789708,0.00063678363132694,0.000645833024689752,0.000656766657714632,0.000675869387067921,0.00069366947557458,0.000728386677855066,0.000763781597201355,0.000797720220495271,0.000860109240037178,0.000886458298887082,0.000969137340497825,0.00100849810010084,0.00105630917139103,0.00119253543765936,0.00120110241690324,0.00121331579702484,0.00123842577165874,0.00124637150021077,0.00128083555513821,0.00130003732374881,0.00130722773161057,0.00132428251483312,0.00132715565383523,0.00133996104870302,0.00135198436720582,0.00135198436720582,0.00137039550443627,0.00137618808691118,0.00138057934453749,0.00140530437526111,0.00149772320169837,0.00149772320169837,0.00154385950354754,0.00155112365128451,0.0017569425874612,0.0017569425874612,0.00178304226006868,0.0019874724926407,0.00205071971794798,0.00209800637889545,0.00222578509644721,0.00223389473474518,0.00239258404175496,0.0024314032340719)

    @Test
    fun checkFdrCorrection() {
        val qValues = multipleTestingCorrection.fdrCorrection(pValues)
        assert(roundNumber(qValues.minOrNull()) == roundNumber(4.113186e-87))
        assert(roundNumber(qValues.maxOrNull()) == roundNumber(0.002431403))
        assert(roundNumber(qValues.average()) == roundNumber(0.000265853))
    }

}
